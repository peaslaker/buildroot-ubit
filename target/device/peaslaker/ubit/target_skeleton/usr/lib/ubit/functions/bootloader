# bootloader variables
BL_SIZE=0x80000
BL_ENV=0x80000
BL_BS=512K
BL_ERASE_BLOCKS=4
BL_TMP=tmp.kwb
BL_DEV=/dev/mtd0
BL_CHECKSUM=/tmp/checksum

	bl_valid () {
		[ $# = 0 ] && set - .
		for p; do
			for v in $p/*.kwb.md5; do
				if ( nanddump -s ${bl_addr} -nol ${BL_SIZE} ${bl_dev} 2>/dev/null | md5sum -c $v -s ) ; then
					echo UBIT:bl: ${bl_addr} ${bl_dev} matches $v
					exit 0
				fi
			done
		done
		exit 1 
	}

	bl_write () {
		flash_erase ${bl_dev} ${bl_addr} ${BL_ERASE_BLOCKS}
		dd if="${bl_image}" bs=${BL_BS} count=1 conv=sync 2>/dev/null | nandwrite -s ${bl_addr} ${bl_dev} -
	}

	bl_dump () {
		nanddump -s ${bl_addr} -nol ${BL_SIZE} -f "${BL_TMP}" ${bl_dev} 2>/dev/null
	}

	bl_checksum () {
		dd if="${bl_image}" bs=${BL_BS} count=1 conv=sync 2>/dev/null | md5sum > "${BL_CHECKSUM}"
		echo UBIT:bl: ${bl_image} checksum `cat "${BL_CHECKSUM}"`
	}

	bl_verify () {
		if ( nanddump -s ${bl_addr} -nol ${BL_SIZE} ${bl_dev} 2>/dev/null | md5sum -c "${BL_CHECKSUM}" -s ); then
			echo UBIT:bl: u-boot checksum match OK.
			exit 0
		else
			echo UBIT:bl: u-boot checksum did not match.
			exit 1
		fi
	}

	bl_verify_correct () {
		if ! ( bl_verify ); then
			echo You had better sort this out before rebooting as the u-boot is now probably corrupt.
			echo Commands that will be needed:
			echo "       - flash_erase ${bl_dev} ${bl_addr} ${BL_ERASE_BLOCKS}"
			echo "       - nandwrite -s ${bl_addr} ${bl_dev} ${bl_image}"
			echo "       - nanddump -nol ${BL_SIZE} ${bl_dev} | md5sum"
			echo Checksum should match: `cat "${BL_CHECKSUM}"` - ${BL_CHECKSUM}
			statusled error
		fi	
	}
		
	bl_backup() {
		(
			[ "${OUTDIR}" ] && cd "${OUTDIR}"
			uniq=`ls | md5sum`
			uniq=${uniq%% *}
			mkdir $uniq
			(
				cd $uniq
				bl_dump
				set - `md5sum "${BL_TMP}"`
				mv "${BL_TMP}" ../u-boot.$1.kwb
				echo ${OUTDIR}u-boot.$1.kwb
			)
			rmdir $uniq
		)
	}

