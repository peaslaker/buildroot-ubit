	uboot_uptodate () {
		(
			. /usr/lib/ubit/functions/bootloader

			bl_install "/usr/lib/ubit/firmware/u-boot.kwb"
		)
	}

# bl chain functions
BL_CHAIN_ADDR=0x380000
BL_CHAIN_DEV=/dev/mtd1

	uboot_chain () {
		(
			. /usr/lib/ubit/functions/bootloader

			# sets up a u-boot image in a section of NAND memory in order to allow chain booting
			bl_image="$1"
			bl_addr=${BL_CHAIN_ADDR}
			bl_dev=${BL_CHAIN_DEV}

			echo UBIT.CHAIN:$1
			if [ -e "${bl_image}" ]; then 
				echo UBIT.CHAIN:${bl_image} writing to ${bl_addr} of ${bl_dev}

				bl_checksum
				bl_write
				( bl_verify )
			fi
		)
	}

	uboot_revert () {
		(
			. /usr/lib/ubit/functions/bootloader

			bl_addr=${BL_CHAIN_ADDR}
			bl_dev=${BL_CHAIN_DEV}
			if ( bl_valid /usr/lib/ubit/firmware/original ); then 
				( cd /tmp
					bl_image=$(bl_backup)
					bl_addr=0
					bl_dev=$BL_DEV
					bl_checksum
					bl_write
					( bl_valid /usr/lib/ubit/firmware/original )
					bl_verify_correct
				)
			fi
		)
	}

	uboot_install () {
		(
			. /usr/lib/ubit/functions/bootloader

			bl_image="$1"
			bl_addr=0
			bl_dev=${BL_DEV}

			bl_checksum
			if [ -e "${bl_image}" ] && ! ( bl_verify ) ; then

				statusled active
				echo UBIT:bl: backing up ${bl_dev} to $(bl_backup)
				echo Keep your u-boot backups safe.
				bl_write
				bl_verify_correct

				statusled idle
			fi
		)
	}

