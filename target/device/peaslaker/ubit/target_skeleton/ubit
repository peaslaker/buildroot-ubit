#!/bin/ash

# source the ub_functions
. /functions/led
. /functions/ub

subset=$1
outdir=$2
[ "$outdir" ] || outdir=`pwd`
[ -z "$subset" ] && usage
echo outdir:$outdir
echo UBIT:ready
while read option; do
	orange_normal
	set -- $option
	if {	[ -z `cat /.ubit.password` ] || { pwd=$1; shift; echo $pwd | md5sum -c /.ubit.password -s; }; }; then	
		echo UBIT:${option}
		case "$1$subset" in
			"on-full"|"on-aufs")
				( cd /workarea
					uniq=`ls | md5sum`
					uniq=${uniq%% *}
					mkdir $uniq
					mount "$2" $uniq && ( cd $uniq
						echo UBIT:operating on $2
						shift
						shift
						echo $@ | /ubit $subset
						)
					umount $uniq
					rm -rf $uniq
					)	
				;;
			"to-full"|"to-aufs")
					uniq=`ls /workarea | md5sum`
					uniq=${uniq%% *}
					mkdir /workarea/$uniq
					mount "$2" /workarea/$uniq && (
						echo UBIT:output to $2
						shift
						shift
						echo $@ | /ubit $subset /workarea/$uniq
						)
					umount /workarea/$uniq
					rm -rf /workarea/$uniq
				;;
			"template-full"|"template-aufs")
				if [ "$2" ]; then
					[ -e "/targets.$2" ] && cat "/targets.$2" > .ubit.targets
				else
					rm .ubit.targets
					fi
				;;
			"snapshot-full"|"snapshot-aufs")
				[ "$2" ] && {
					echo setting password
					echo $2 | md5sum > /.ubit.password
				}
				. /ubit.snapshot
				;;
			"prepare-full"|"prepare-aufs")
				[ "$2" ] && {
					echo setting password
					echo $2 | md5sum > /.ubit.password
				}
				. /ubit.prepare
				;;
			"kernel-full"|"kernel-aufs")
				. /ubit.kernel
				;;
			"install_on_reboot-full"|"install_on_reboot-aufs")
				echo ubiformat_mtd3 > $outdir/.ubit.oneshot
				echo flash_once >> $outdir/.ubit.oneshot
				[ -n "$2" ] && echo mkrw $2 >> $outdir/.ubit.oneshot
				cat $outdir/.ubit/uInstaller > $outdir/uInitrd
				;;
			"installer_disk-full"|"installer_disk-aufs")
				echo ubiformat_mtd3 > $outdir/.ubit.action
				echo flash >> $outdir/.ubit.action
				[ -n "$2" ] && echo mkrw $2 >> $outdir/.ubit.action
				cat $outdir/.ubit/uInstaller > $outdir/uInitrd
				;;
			"ubiformat_mtd3-full"|"ubiformat-full")
				[ -e /dev/ubi0 ] && ubidetach /dev/ubi_ctrl -m 3
				ubiformat /dev/mtd3
				ubiattach /dev/ubi_ctrl -m 3
				;;
			"ubiattach_mtd3-full"|"ubiattach-full")
				ubiattach /dev/ubi_ctrl -m 3
				;;
			"mkrw-full")
				( ubinfo -d 0 -N rw &>/dev/null ) && ubirmvol /dev/ubi0 -N rw
				ubimkvol /dev/ubi0 -N rw -S $2
				;;
			"rmrw-full")
				( ubinfo -d 0 -N rw &>/dev/null ) && ubirmvol /dev/ubi0 -N rw
				;;
			"install-full")
				[ "$2" ] && {
					echo setting password
					echo $2 | md5sum > /.ubit.password
				}
				. /ubit.prepare && . /ubit.flash
				rm -rf .ubit
				;;
			"flash_once-full")
				rm $outdir/uInitrd
				flash
				;;
			"flash-full")
				flash
				;;
			"revert-full"|"revert-aufs")
				blch_revert
				;;
			"ubiargs_default-full"|"ubiargs_default-aufs")
				fw_setenv ubi_args 'ubi_args_default'
				;;
			"ubiargs_tmpfs-full"|"ubiargs_tmpfs-aufs")
				fw_setenv ubi_args 'ubi_args_tmpfs'
				;;
			"nc_off-full"|"nc_off-aufs")
				fw_setenv preboot
				;;
			"nc_on-full"|"nc_on-aufs")
				fw_setenv preboot 'run nc_test nc_start'
				;;
			"fastboot-full"|"fastboot-aufs")
				fw_setenv bootcmd 'ubi part ubi; run bootcmd_fast'
				;;
			"normal-full"|"normal-aufs")
				fw_setenv bootcmd 'ubi part ubi; run bootcmd_go'
				;;
			"ethaddr-full"|"ethaddr-aufs")
				fw_setenv ethaddr $2
				;;
			"exit-full"|"exit-aufs")
				exit 1
				;;
			"reboot-full"|"reboot-aufs")
				reboot -f
				;;
			"help-full"|"help-aufs"|"help")
				usage
				;;
			*)
				if [ -e "/$1.kwb" ]; then
					blch_install /$1.kwb
					blch_chain /orig/$1.kwb
				elif [ -e "/orig/$1.kwb" ]; then
					blch_chain /orig/$1.kwb
				else
					echo UBIT:$1:unrecognised instruction
					usage
				fi
				;;
			esac
		fi
	orange_off
	echo UBIT:ready
	done
