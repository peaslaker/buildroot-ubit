	echo UBIT.SNAPSHOT:purging old work environment...
	uni="boot modules rootfs ramdisk"
	if [ -e .ubit.targets ]; then
		targs=.ubit.targets
	else
		targs=/tmp/targets
		cat /targets > /tmp/targets
		kver=`uname -r`
		echo usr/src/${kver} ubi modules >> /tmp/targets	
		echo usr/src/linux-2.6 ubi modules >> /tmp/targets	
		( 	cd usr/src
			ln -sf ${kver} linux-2.6
			)
		fi
	echo UBIT.SNAPSHOT:extracting rootfs...

	orange_slow			# this is about to take a long time

	# Because busybox tar is very limited we have to jump through hoops to prevent our tarball copy from recursing

	uniq=`ls | md5sum`
	uniq=${uniq%% *}

	rm -rf $outdir/.ubit $outdir/.prt
	mkdir -p $outdir/.ubit/$uniq

	mkdir -p boot     # have to make sure the mount point exists.  e.g. pacman -R kernel26-withlinux will remove the mountpoint
	mount -t ubifs ubi:boot boot

	tar -c . --exclude .ubit/$uniq | tar -C $outdir/.ubit/$uniq -x 
	(
		cd $outdir
		mv .ubit/$uniq .ubit/rootfs 
		rm -rf .ubit/rootfs/.ubit*

		. /ubit.scan

		cat /cpio_list | cpio -H newc -o | gzip > /tmp/initramfs.cpio.gz
		mkimage -A arm -O linux -T ramdisk -C gzip -a 0x0 -e 0x0 -n "Installer for specific UBIT snapshot" -d /tmp/initramfs.cpio.gz .ubit/uInstaller
		)

	umount boot
