# the init.go script gets sourced by the parent init script.  The reason for this is that the trailing portion of the 
# script is dynamically generated by the init.ubit script and it keeps all the code together for setting up the rootfs
#Â leaving the generic init script available for setting up a busybox environment.
# Also, the script moves the directory to the target switch_root directory

# rw is already mounted and we should have been moved to rw

mkdir ../newroot ../rootfs ../modules

move_mounts () {
	for p ; do
		mkdir -p .aufs/$p
		mount --move ../$p .aufs/$p 
		done
	}

case "$rtype" in
	"ubifs")
		mount -t ubifs ubi:modules ../modules -o ro,noatime && \
		mount -t aufs aufs ../newroot -o br:../rw=rw:../modules=rr && \
		cd ../newroot && move_mounts rw modules && \
		[ -e /.ubit.extramounts ] && . /.ubit.extramounts
		;;
	*)
		mount -t ubifs ubi:modules ../modules -o ro,noatime && \
		mount -t ubifs ubi:rootfs ../rootfs -o ro,noatime && \
		mount -t aufs aufs ../newroot -o br:../rw=rw:../rootfs=rr:../modules=rr && \
		cd ../newroot && move_mounts rw rootfs modules && \
		[ -e /.ubit.extramounts ] && . /.ubit.extramounts
  		;;
	esac	
