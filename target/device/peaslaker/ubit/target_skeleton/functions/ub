# source subsidiary functin groups
. /functions/ub_bootloader
. /functions/ub_bootloader_chain
. /functions/ub_ubi_images

# usage function
	usage () {
		echo "The following special macro instructions are supported by the /ubit script."
		echo
		echo Install preparation macros
		echo "     - on [device] [macro] # specify a block device other than /dev/sda1 to be used as the working area for the command"
		echo "     - to [device] [macro] # specify a block device other than /dev/sda1 to be used as the output area for the command"
		echo "     - template <targets>  # copy one of the pre-defined targets files into the root filesystem to be used for the scan and generation of UBIFS images"
		echo "     - snapshot [password] # creates ubifs images and matched installer ramdisk from a snapshot of the normal mountable running system"
		echo "     - prepare [password]  # creates ubifs images and matched installer ramdisk from rootfs.tar.gz, modules.tar.gz and boot.tar.gz"
		echo "     - kernel              # partition the contents of a boot.tar.gz and modules.tar.gs onto ubifs partitions"
		echo "     - install_on_reboot [LEBS]# sets ubifs images and matched installer ready for use on next reboot; sets installer as uInitrd and runs flash_once"
		echo "     - install_disk [LEBS] # sets ubifs images and matched installer ready for use on subseqent reboots; sets installer as uInitrd and runs flash"
		echo
		echo "Install execution macros (need to be run by ramdisk launched from external install media)"
		echo "     - ubiformat_mtd3    # format mtd3 as a ubi partition"
		echo "     - ubiattach_mtd3    # attach mtd3 as a ubi partition"
		echo "     - mkrw <LEBS>       # creates a rw UBIFS partition of size <LEBS> logical erase blocks "
		echo "     - rmrw      # delete a preexisting rw UBIFS partition"
		echo "     - install [password]# partition the contents of rootfs.tar.gz, modules.tar.gz and boot.tar.gz onto ubifs partitions"
		echo "     - flash_once# flash writes ubifs images - must be invoked within the matched installer"
		echo "     - flash     # flash writes ubifs images - resets the install media after installation, ready to go again"  
		echo
		echo "Firmware installation macros"
		echo "     - dockstar     # reinstall the original dockstar u-boot to mtd0, restoring original pogoplug functionality"
		echo "     - goflexnet    # reinstall the original goflexnet u-boot to mtd0, restoring original pogoplug functionality"
		echo "     - ubit [reset] # install the up to date ubit u-boot to mtd0, reset the environment"
		echo
		echo "Boot sequence adjustments"
		echo "     - nc_off    # switch U-Boot network console off"
		echo "     - nc_on     # switch U-Boot network console on (default 10.10.10.5)" 
		echo "     - ubiargs_default   # switch U-Boot read-write partition priority to defaults" 
		echo "     - ubiargs_tmpfs     # switch U-Boot to use a tmpfs read/write partition" 
		echo "     - fastboot          # switches off boot from UBIFS as the default, allowing boot from HD and USB (sda, default rootfs)"
		echo "     - normal            # switches on boot from UBIFS as the default"
		echo "     - ethaddr           # sets the 'ethaddr' variable in the bootloader environment.  Mac address will change at random unless forced"
		echo 
		echo "If a password has been set on the ramdisk, every command must be prefixed with the correct password."
		echo 
		echo Generally, the Orange LED is used to signal the degree of activity.  
		echo For example in the install process, when the script is actively scanning
		echo the source material, the orange LED should flash fast.  When it is engaged
		echo in the big atomic commands for echo creating UBIFS images, it flashes slowly.
		echo When it is at a prompt, the green heartbeat is healthy, the orange heartbeat 
		echo indicates a need to intervene before rebooting because you have a brick on 
		echo your hands.
		echo 
		}





